name: Wmk Builder Su swap 20 gb
on:
  workflow_dispatch:
    inputs:
      BRANCH:
        description: Kernel branch
        default: 'wmk-rebased'
        required: true
      DEFCONFIG: 
        description: Defconfig
        default: 'f22_defconfig'
        required: false
      KSU:
        description: Add KernelSU support
        type: boolean
jobs:
  build:
    runs-on: ubuntu-24.04
    environment: telegramUpload
    steps:
    - name: Record build time
      run: |
       echo "BUILD_START=$(date +%s)" >> $GITHUB_ENV
    - name: Clear memory cache
      run: |
           sync
           echo 3 > /proc/sys/vm/drop_caches
    - name: Check build success
      if: ${{ failure() }}
      run: |
           echo "Build failed! Check logs above"
           exit 1       
    - name: 1️⃣Get date
      id: rundate
      run: sudo rm /etc/localtime && sudo ln -s /usr/share/zoneinfo/America/Chicago /etc/localtime && echo "REPO_DATE=`date`" >> $GITHUB_OUTPUT
    - name: 2️⃣Set Swap Space
      uses: pierotofy/set-swap-space@master
      with:
          swap-size-gb: 20
    - uses: actions/checkout@v4
      name: 3️⃣actions/checkout
      with:
        path: kernel_root
        repository: "Samo141988/kernel_samsung_f22_wmk_rebased"
        ref: ${{ github.event.inputs.BRANCH }}
        show-progress: false
        fetch-depth: 1
        
    - name: 4️⃣Prepare dependencies
      run: |
        sudo apt update -y
        sudo apt upgrade -y
        sudo apt install bc aptitude cpio flex git python-is-python3 tar perl wget aria2 curl lz4 sudo -y
        sudo apt install apt-utils nano bison ca-certificates libc6-dev libssl-dev openssl ssh zip zstd software-properties-common build-essential libarchive-tools libssl-dev libffi-dev libncurses5-dev zlib1g zlib1g-dev libreadline-dev libbz2-dev libsqlite3-dev pigz p7zip-full
    - name: 5️⃣Fetch toolchains
      run: |
        mkdir toolchain
        cd toolchain
        aria2c https://github.com/Samsung-MT6769-Devs/toolchain/releases/download/clang-21-f8df24015ae2e3c76673c2c9d7a6e4201a68bebd/clang-21-wmk.tar.zst
        zstd --decompress clang-21-wmk.tar.zst
        tar xf clang-21-wmk.tar
      working-directory: kernel_root

    - name: 6️⃣ Add KernelSU if needed
      if: ${{ github.event.inputs.KSU == 'true' }}
      run: |
         git clone https://github.com/KernelSU-Next/KernelSU-Next.git --depth=1
         cd KernelSU-Next && git submodule update --init
         cd ..
         echo "Toolchain Path: $(pwd)/toolchain/clang-21-wmk/bin"
         export PATH="$(pwd)/toolchain/clang-21-wmk/bin:$PATH"
         export ARCH=arm64
         export SUBARCH=arm64
         if [[ "${{ github.event.inputs.KSU }}" == "true" ]]; then
         export KSU_BUILD=true
         export KSU_OVERRIDE_CONFIG=1
         fi
      working-directory: kernel_root

    - name: 8️⃣ Build kernel
      id: buildKernel
      run: |
           make mrproper
           rm -rf out/
           if [[ "${{ github.event.inputs.KSU }}" == "true" ]]; then
           echo "CONFIG_KSU=y" > .config
           echo "CONFIG_KSU_DEBUG=n" >> .config
           fi
           bash build_kernel.sh
           if [[ "${{ github.event.inputs.KSU }}" == "true" ]]; then
             KSU_REV_COUNT=$(cd KernelSU-Next && git rev-list --count HEAD)
             KSU_VERSION=$(expr 10200 + $KSU_REV_COUNT)
           else
             KSU_VERSION="No KernelSU"
           fi
           echo "KSU_VERSION=$KSU_VERSION" >> $GITHUB_OUTPUT
      working-directory: kernel_root
    
    - name: 7️⃣Upload AnyKernel3
      uses: actions/upload-artifact@v4
      with:
        name: AnyKernel3-f22-wmk
        path: kernel_root/AnyKernel/*
        compression-level: 9
