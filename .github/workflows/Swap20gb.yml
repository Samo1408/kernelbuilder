name: Rissu Builder Kernel swap 20 gb
on:
  workflow_dispatch:
    inputs:
      BRANCH:
        description: Kernel branch
        default: 'wmk-rebased'
        required: true
      DEFCONFIG: 
        description: Defconfig
        default: 'f22_defconfig'
        required: false
      KSU:
        description: Add KernelSU support
        type: boolean
      
      
      
jobs:
  build:
    runs-on: ubuntu-24.04
    environment: telegramUpload
    steps:
    - name: Get date
      id: rundate
      run: sudo rm /etc/localtime && sudo ln -s /usr/share/zoneinfo/America/Chicago /etc/localtime && echo "REPO_DATE=`date`" >> $GITHUB_OUTPUT
    - name: Set Swap Space
      uses: pierotofy/set-swap-space@master
      with:
          swap-size-gb: 20
    - uses: actions/checkout@v4
      with:
        path: kernel_root
        repository: "Samo141988/kernel_samsung_f22_wmk_rebased"
        ref: ${{ github.event.inputs.BRANCH }}
        show-progress: false
        fetch-depth: 1
        
    - name: Prepare dependencies
      run: |
        sudo apt update -y
        sudo apt install bc cpio flex bison aptitude git python-is-python3 tar perl wget aria2 curl lz4 zst -y
        sudo aptitude install libssl-dev -y
        sudo apt install apt-utils nano bc bison ca-certificates curl flex gcc git libc6-dev libssl-dev openssl ssh wget zip zstd sudo make clang gcc-arm-linux-gnueabi software-properties-common build-essential libarchive-tools gcc-aarch64-linux-gnu libssl-dev libffi-dev libncurses5-dev zlib1g zlib1g-dev libreadline-dev libbz2-dev libsqlite3-dev pigz python3 cpio lld p7zip-full
        sudo git clone https://github.com/rsuntk/AnyKernel3.git
    - name: Fetch toolchains
      run: |
        mkdir toolchain
        cd toolchain
        aria2c https://github.com/Samsung-MT6769-Devs/toolchain/releases/download/clang-21-f8df24015ae2e3c76673c2c9d7a6e4201a68bebd/clang-21-wmk.tar.zst
        zstd --decompress clang-21-wmk.tar.zst
        tar xf clang-21-wmk.tar
      working-directory: kernel_root

    - name: Build kernel
      id: buildKernel
      run: |
        export PATH=$(pwd)/toolchain/clang-wmk/bin:$PATH
        export CROSS_COMPILE="$(pwd)/toolchain/clang-wmk/bin/aarch64-linux-android-"
        export CROSS_COMPILE_COMPAT="$(pwd)/toolchain/clang-wmk/bin/arm-linux-gnueabi-"
        export CROSS_COMPILE_ARM32=$CROSS_COMPILE_COMPAT
        export CLANG_TRIPLE=aarch64-linux-gnu-
        export KBUILD_BUILD_USER="samo"
        export KBUILD_BUILD_HOST="samo141988"
        export BUILD_START=`date`
        export SELINUX_STATE="Enforcing"
        export IS_CI=true
        export DEFCONFIG="${{ github.event.inputs.DEFCONFIG }}"
        export DEVICE="SM-E225F"
        export DEVICE_ID="f22"
        export TARGET_PRODUCT="f22ins"
        export KERNELSU="${{ github.event.inputs.KSU }}"
        export LLVM=1
        export LLVM_IAS=1
        export LTO=THIN
  
        sudo bash $(pwd)/build_kernel.sh
        
        if [[ "${{ github.event.inputs.KSU }}" = "true" ]]; then
        	KSU_REV_COUNT=$(cd KernelSU && git rev-list --count HEAD)
        	KSU_VERSION=$(expr 10200 + $KSU_REV_COUNT)
        else
        	KSU_VERSION="No KernelSU"
        fi
        echo "- KernelSU version: $KSU_VERSION"

        if [ -e $(pwd)/include/linux/susfs.h ]; then
          SUSFS_VERSION=$(cat ./include/linux/susfs.h | grep -E '^#define SUSFS_VERSION' | cut -d' ' -f3 | sed 's/"//g')
        else
          SUSFS_VERSION="Not available"
        fi
        
        
        
        echo "TITLE=Galaxy `echo $DEVICE_ID` Kernel" >> $GITHUB_ENV
        
        echo ""
        echo "===================================================="
        strings out/arch/arm64/boot/Image | grep "Linux version"
        echo "===================================================="

        working-directory: kernel_root
      
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Build-f22_defconfig
        path: |
          kernel_root/out/arch/arm64/boot/*.gz
          kernel_root/out/arch/arm64/boot/dts/mediatek/*.dtb

    - name: Upload AnyKernel3
      uses: actions/upload-artifact@v4
      with:
        name: AnyKernel3-f22-wmk
        path: kernel_root/AnyKernel3/*
        compression-level: 9
        
    
